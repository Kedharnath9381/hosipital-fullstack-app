name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Build Backend with Maven
        run: |
          cd Backend-CICD
          mvn clean compile -DskipTests

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: Frontend-CICD/package-lock.json
          
      - name: Install dependencies
        run: |
          cd Frontend-CICD
          npm ci
          
      - name: Build frontend
        run: |
          cd Frontend-CICD
          npm run build

  docker-build:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.backend
          tags: cicd-backend:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.frontend
          tags: cicd-frontend:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

  integration-test:
    runs-on: ubuntu-latest
    needs: [docker-build]
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: testpassword
          MYSQL_DATABASE: cicdproject
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Build and test with Docker Compose
        run: |
          docker-compose version
          docker-compose -f docker-compose.ci.yml up -d
          sleep 30
          docker-compose -f docker-compose.ci.yml ps
          docker-compose -f docker-compose.ci.yml logs backend
      
      - name: Check backend health
        run: |
          curl -f http://localhost:5050/actuator/health || echo "Backend not ready"
          curl -f http://localhost:80/health || echo "Frontend not ready"
      
      - name: Cleanup
        if: always()
        run: |
          docker-compose -f docker-compose.ci.yml down